//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18052
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace parent_bMedecine.ServiceObservation {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceObservation.IServiceObservation")]
    public interface IServiceObservation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceObservation/AddObservation", ReplyAction="http://tempuri.org/IServiceObservation/AddObservationResponse")]
        bool AddObservation(int idPatient, Dbo.Observation obs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceObservation/AddObservation", ReplyAction="http://tempuri.org/IServiceObservation/AddObservationResponse")]
        System.Threading.Tasks.Task<bool> AddObservationAsync(int idPatient, Dbo.Observation obs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceObservationChannel : parent_bMedecine.ServiceObservation.IServiceObservation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceObservationClient : System.ServiceModel.ClientBase<parent_bMedecine.ServiceObservation.IServiceObservation>, parent_bMedecine.ServiceObservation.IServiceObservation {
        
        public ServiceObservationClient() {
        }
        
        public ServiceObservationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceObservationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceObservationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceObservationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddObservation(int idPatient, Dbo.Observation obs) {
            return base.Channel.AddObservation(idPatient, obs);
        }
        
        public System.Threading.Tasks.Task<bool> AddObservationAsync(int idPatient, Dbo.Observation obs) {
            return base.Channel.AddObservationAsync(idPatient, obs);
        }
    }
}
